{"backend_state":"running","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":234737664},"metadata":{},"trust":false,"type":"settings"}
{"cell_type":"markdown","id":"085f46","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <h3>\n Preview Activity 1.3.1</h3>\n \n\n</div>","metadata":{"editable":false},"pos":1,"type":"cell"}
{"cell_type":"markdown","id":"0b8f9e","input":"","metadata":{"editable":true},"pos":4,"type":"cell"}
{"cell_type":"markdown","id":"0ccc26","input":"","metadata":{"editable":true},"pos":13,"type":"cell"}
{"cell_type":"markdown","id":"155ead","input":"","metadata":{"editable":true},"pos":6,"type":"cell"}
{"cell_type":"markdown","id":"16b9ef","input":"","metadata":{"editable":true},"pos":78,"type":"cell"}
{"cell_type":"markdown","id":"16f968","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nUse <tt>full_simplify()</tt> to find an equivalent expression for \\((x+y)^4\\).\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":57,"type":"cell"}
{"cell_type":"markdown","id":"17dcfa","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nThis may be verified by entering <tt>(x+7==11)-7</tt> into a Code cell.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":73,"type":"cell"}
{"cell_type":"markdown","id":"19e731","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>b. </b></div>\n \n <span>\nSageMath won't approximate any values unless asked. You can check this by typing <tt>pi^2</tt>\nand <tt>e^3</tt>. To make them appear with mathematical formatting as \\(\\pi^2\\)\nand \\(e^3\\), use the <tt>show()</tt> syntax\nlike you did in \n Preview Activity 1.3.1.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":14,"type":"cell"}
{"cell_type":"markdown","id":"1b422b","input":"","metadata":{"editable":true},"pos":15,"type":"cell"}
{"cell_type":"markdown","id":"1ee6c2","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nUse a Code cell to declare \\(y\\) and \\(z\\) to be variables.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":44,"type":"cell"}
{"cell_type":"markdown","id":"1f564e","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nSolve the equation \\(2x+5=x-7\\) by subtracting \\(x\\) and \\(5\\) from both sides of the equation.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":74,"type":"cell"}
{"cell_type":"markdown","id":"20fdf1","input":"","metadata":{"editable":true},"pos":19,"type":"cell"}
{"cell_type":"markdown","id":"2cfe67","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>b. </b></div>\n \n <span>\nThe value stored in a CS variable may be reused later by using the variable name. For example,\n<tt>craig_pens+laura_pens+phillip_pens+sherill_pens+steven_pens</tt>\nwould return the result <tt>74</tt>.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":27,"type":"cell"}
{"cell_type":"markdown","id":"2e127c","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nTry editing the assignment of one group member's pens in the previous Code cell, and try overwriting\nanother group member's pens value by creating a Code cell below. For example, in\n\n Listing 1.3.3 the original assignment for <tt>craig_pens</tt> is amended,\nbut you could also amend the value of <tt>phillip_pens</tt> by creating a new Code cell below\nwith the line <tt>phillip_pens = 42</tt>.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":31,"type":"cell"}
{"cell_type":"markdown","id":"371871","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nWe now will explore mathematical variables.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":41,"type":"cell"}
{"cell_type":"markdown","id":"4276ea","input":"","metadata":{"editable":true},"pos":58,"type":"cell"}
{"cell_type":"markdown","id":"4927d5","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>e. </b></div>\n \n <span>\nNow use the Kernel > Run All menu option in CoCalc.\nWrite a sentence or two explaining how the sum changed, and why.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":36,"type":"cell"}
{"cell_type":"markdown","id":"4e6baa","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>b. </b></div>\n \n <span>\nWhen mathematical variables or more advanced values are present, the equality operator\nwill return an equation, but won't immediately reveal whether this equation is true or false.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":65,"type":"cell"}
{"cell_type":"markdown","id":"4f6b5d","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>f. </b></div>\n \n <span>\nUse the <tt>solve()</tt> tool to find both solutions to \\(x^2+3x+7=4-x\\).\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":79,"type":"cell"}
{"cell_type":"markdown","id":"50e563","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nCheck to see what Sage gives as the value of \\(e^{i\\pi}+1\\).\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":12,"type":"cell"}
{"cell_type":"markdown","id":"533d78","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>c. </b></div>\n \n <span>\nIf an approximation is desired, the numerical approximation tool <tt>n</tt> may be used.\nFind an approximate value for \\(\\sqrt{2}\\) by using <tt>sqrt(2).n(digits=10)</tt>.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":16,"type":"cell"}
{"cell_type":"markdown","id":"544851","input":"","metadata":{"editable":true},"pos":35,"type":"cell"}
{"cell_type":"markdown","id":"583362","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nCheck this by entering <tt>x==sqrt(x^2)</tt> into a Code cell below. (Remember, you can use\nthe <tt>show()</tt> tool to make it appear as \\(x=\\sqrt{x^2}\\).)\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":66,"type":"cell"}
{"cell_type":"markdown","id":"5bf175","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nAssign the expression \\(x^2+4yz\\) to a CS variable with the name <tt>my_expression</tt>.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":50,"type":"cell"}
{"cell_type":"markdown","id":"629df4","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>a. </b></div>\n \n <span>\nSeveral important numbers in mathematics may be used in SageMath with <tt>pi</tt>\nfor the circular constant \\(\\pi\\), <tt>e</tt> for the natural number \\(e\\),\nand <tt>i</tt> for the imaginary unit \\(i\\). (Don't worry if you aren't familiar\nwith these yet.)\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":11,"type":"cell"}
{"cell_type":"markdown","id":"6f3171","input":"","metadata":{"editable":true},"pos":33,"type":"cell"}
{"cell_type":"markdown","id":"6f45a0","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nSageMath is a mathematical software system designed for representing ideas\nfrom mathematics as faithfully as possible.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":10,"type":"cell"}
{"cell_type":"markdown","id":"6fbfc1","input":"","metadata":{"editable":true},"pos":67,"type":"cell"}
{"cell_type":"markdown","id":"7134ed","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nMany of the features of the Python language/kernel are optimized for computational\nefficiency, such as using binary approximations of fractions. This is valuable for\napplications like data science, but for studying mathematics itself we will\nfind it useful to have another kernel available to more precisely model things.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":2,"type":"cell"}
{"cell_type":"markdown","id":"7359d0","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span class=\"newcommands\" style=\"\n display:none;\n \">\\(\\newcommand{\\amp}{&}\\)</span>\n \n <h1>1.3Â The SageMath Kernel</h1>\n <div>\n <a href=\"\n https://TODO/programming-sagemath.html\n \">\n https://TODO/programming-sagemath.html\n </a>\n </div>\n \n\n</div>","metadata":{"editable":false},"pos":0,"type":"cell"}
{"cell_type":"markdown","id":"754617","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nUse a code cell to find the sum of the pens in your group by writing the sum of the variable names.\n(Later we will learn much more elegant patterns for storing and using lists of data while still\nusing long descriptive variable names as recommended.)\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":28,"type":"cell"}
{"cell_type":"markdown","id":"76a554","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <h3>\n Activity 1.3.5</h3>\n \n\n</div>","metadata":{"editable":false},"pos":59,"type":"cell"}
{"cell_type":"markdown","id":"7834e9","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>d. </b></div>\n \n <span>\nWhich is bigger: \\(\\pi^e\\) or \\(e^\\pi\\)?\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":18,"type":"cell"}
{"cell_type":"markdown","id":"783620","input":"","metadata":{"editable":true},"pos":26,"type":"cell"}
{"cell_type":"markdown","id":"78d1c9","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>c. </b></div>\n \n <span>\nSageMath is able to verify the truth of simple equations by using the <tt>bool()</tt> tool.\nFor example, <tt>bool(x==sqrt(x^2))</tt> will return <tt>False</tt>, since it fails when \\(x=-4\\).\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":68,"type":"cell"}
{"cell_type":"markdown","id":"7944ce","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <h3>\n Activity 1.3.4</h3>\n \n\n</div>","metadata":{"editable":false},"pos":40,"type":"cell"}
{"cell_type":"markdown","id":"79645b","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nFor each member of your group, use a code cell to assign a CS variable storing the number of pens\n(or pencils, or any object you'd like) each person has with them.\nAn example is given in \n Listing 1.3.2;\nnote that only a single Code cell is necessary, but each assignment should be made on a separate line.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":24,"type":"cell"}
{"cell_type":"markdown","id":"7cfa79","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>e. </b></div>\n \n <span>\nSageMath also supports common simplifications of expressions with the <tt>full_simplify()</tt> tool.\nFor example, <tt>show( ((x+1)^3).full_simplify() )</tt> returns the equivalent expression\n\\(x^3+3x^2+3x+1\\).\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":56,"type":"cell"}
{"cell_type":"markdown","id":"7fbb44","input":"","metadata":{"editable":true},"pos":70,"type":"cell"}
{"cell_type":"markdown","id":"82c27a","input":"","metadata":{"editable":true},"pos":45,"type":"cell"}
{"cell_type":"markdown","id":"862de4","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>d. </b></div>\n \n <span>\nMath variables and expressions are useful for describing how data should be manipulated before the\nvalues of those data are known.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":52,"type":"cell"}
{"cell_type":"markdown","id":"86dd75","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nWhen only simple numerical values are present, the equality operator behaves similarly in both Python\nand SageMath: it evaluates both sides of the equation and returns a Boolean value\nof <tt>True</tt> or <tt>False</tt>. For example, <tt>3*2==6</tt> returns <tt>True</tt> while\n<tt>3^2==6</tt> returns <tt>False</tt>.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":62,"type":"cell"}
{"cell_type":"markdown","id":"8a9cc0","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>f. </b></div>\n \n <span>\nCopy the line of code summing your variables into a new Code cell below\n(e.g. <tt>craig_pens+laura_pens+phillip_pens+sherill_pens+steven_pens</tt>).\nWrite a sentence explaining why you get a different result even though the Code cells are exactly the same.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":38,"type":"cell"}
{"cell_type":"markdown","id":"8c4f8f","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nThese two concepts are related, but not exactly the same. Since SageMath is built upon Python,\nit provides support for both CS variables and math variables.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":22,"type":"cell"}
{"cell_type":"markdown","id":"8ca613","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nUse a Code cell to substitute the values \\(x=1,y=2,z=3\\) into the expression \\(x^2+4yz\\),\nand confirm that the resulting value is equal to \\(1^2+4(2)(3)\\).\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":54,"type":"cell"}
{"cell_type":"markdown","id":"9121d6","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div class=\"sidebyside\" style=\"\n display:flex;justify-content:center;\n \">\n \n <div><table><caption style=\"\n caption-side:top;white-space: nowrap;color:rgba(0,0,0,.45)}\n \">\n <b>\n Table 1.3.1.</b> Sample pen data\n </caption>\n <tr><td>Name</td><td>Pens kept in backpack</td></tr>\n \n <tr><td>Craig</td><td>1</td></tr>\n \n <tr><td>Laura</td><td>30</td></tr>\n \n <tr><td>Phillip</td><td>18</td></tr>\n \n <tr><td>Sherill</td><td>03</td></tr>\n \n <tr><td>Steven</td><td>22</td></tr>\n </table></div>\n \n <div><b>\n Listing 1.3.2.</b></div>\n <div>Corresponding variable assignments\n <span><pre>craig_pens = 1\nlaura_pens = 30\nphillip_pens = 18\nsherill_pens = 3\nsteven_pens = 22</pre></span>\n </div>\n \n </div>\n \n\n</div>","metadata":{"editable":false},"pos":25,"type":"cell"}
{"cell_type":"markdown","id":"92335f","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>c. </b></div>\n \n <span>\nAn expression can itself be stored in a CS variable using the assignment operator <tt>=</tt>;\nfor example, <tt>quadratic = x^2-4*x+4</tt> saves the expression \\(x^2-4x+4\\) using the name <tt>quadratic</tt>.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":49,"type":"cell"}
{"cell_type":"markdown","id":"9a6de6","input":"","metadata":{"editable":true},"pos":51,"type":"cell"}
{"cell_type":"markdown","id":"9b0faa","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>d. </b></div>\n \n <span>\nEquations can be manipulated by SageMath similarly to how you manipulate them by hand. For example:\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":71,"type":"cell"}
{"cell_type":"markdown","id":"9bce0e","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nThe term variable means slightly different things in computer science and mathematics.\nIn computer science, variables are used to store and retrieve\ndata within an application. In mathematics, variables are used to represent an\narbitrary or unknown value of data within a statement.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":21,"type":"cell"}
{"cell_type":"markdown","id":"9c0d61","input":"","metadata":{"editable":true},"pos":64,"type":"cell"}
{"cell_type":"markdown","id":"9e48f5","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <h3>\n Activity 1.3.2</h3>\n \n\n</div>","metadata":{"editable":false},"pos":9,"type":"cell"}
{"cell_type":"markdown","id":"a257cb","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>c. </b></div>\n \n <span>\nFinally, use <tt>show( (x+1)^3 == ((x+1)^3).full_simplify() )</tt> to display the\nalgebraic formula \\((x+1)^3=x^3+3x^2+3x+1\\).\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":7,"type":"cell"}
{"cell_type":"markdown","id":"ab9903","input":"","metadata":{"editable":true},"pos":17,"type":"cell"}
{"cell_type":"markdown","id":"ac0310","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>a. </b></div>\n \n <span>\nTo assign a value to a CS variable, the assignment operator <tt>=</tt> is used.\nIt's considered best practice to give CS variables semantic, that is, descriptive\nnames such as <tt>temperature_in_room</tt>, using lowercase letters and underscore <tt>_</tt> characters.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":23,"type":"cell"}
{"cell_type":"markdown","id":"add875","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nOther math variables are declared using by using the <tt>var()</tt> tool. For example,\n<tt>a = var(\"a\")</tt> declares <tt>a</tt> to be the variable named \\(a\\), and <tt>b,c = var(\"b c\")</tt>\ndeclares both <tt>b</tt> and <tt>c</tt> to be variables.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":43,"type":"cell"}
{"cell_type":"markdown","id":"af7d15","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>a. </b></div>\n \n <span>\nSince the equal sign = is already used as the assignment operator <tt>=</tt>,\ntwo equal signs are used to represent the equality operator <tt>==</tt>.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":61,"type":"cell"}
{"cell_type":"markdown","id":"b125bc","input":"","metadata":{"editable":true},"pos":75,"type":"cell"}
{"cell_type":"markdown","id":"b463f7","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nIn addition to storing and manipulating expressions of mathematical variables,\nSageMath also supports studying equations that set two expressions equal to one another.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":60,"type":"cell"}
{"cell_type":"markdown","id":"b7e9e2","input":"","metadata":{"editable":true},"pos":29,"type":"cell"}
{"cell_type":"markdown","id":"b85138","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>e. </b></div>\n \n <span>\nSageMath can automatically solve many equations for you using the <tt>solve()</tt> tool.\nFor example, <tt>solve(x+7==11,x)</tt> reveals the solution \\(x=4\\) immediately.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":76,"type":"cell"}
{"cell_type":"markdown","id":"ba6fff","input":"","metadata":{"editable":true},"pos":37,"type":"cell"}
{"cell_type":"markdown","id":"bee2b0","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>b. </b></div>\n \n <span>\nConfirm that <tt>1/10+1/5</tt> equals exactly \\(\\frac{3}{10}\\) in SageMath.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":5,"type":"cell"}
{"cell_type":"markdown","id":"c2691f","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nUse the <tt>bool()</tt> tool to verify that \\(3e^{1-\\frac{1}{2}i\\pi}\\) has the same value\nas \\(-3ei\\).\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":69,"type":"cell"}
{"cell_type":"markdown","id":"c4c080","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nFor example, suppose we now want to assume \\(x=6,y=0,z=-3\\) and compute the corresponding value\nfor the expression \\(x^2+4yz\\) saved as <tt>my_expression</tt>. You can check that\n\\(6^2+4(0)(-3)=36\\), either by hand or evaluating <tt>6^2+4*0*(-3)</tt>.\nBut to have SageMath compute this for you immediately, you could use the following syntax:\n<tt>my_expression(x=6,y=0,z=-3)</tt>.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":53,"type":"cell"}
{"cell_type":"markdown","id":"c76a1e","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nUse the equality operator to verify that \\(1+2+3+4+5+6\\) has the same value as\n\\(\\frac{6\\times 7}{2}\\).\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":63,"type":"cell"}
{"cell_type":"markdown","id":"cb181c","input":"","metadata":{"editable":true},"pos":48,"type":"cell"}
{"cell_type":"markdown","id":"d1dc83","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>a. </b></div>\n \n <span>\nUse the latest <tt>SageMath</tt> kernel to confirm that <tt>6^2</tt> and\n<tt>6**2</tt> both represent \\(6^2=36\\).\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":3,"type":"cell"}
{"cell_type":"markdown","id":"d2c450","input":"","metadata":{"editable":true},"pos":8,"type":"cell"}
{"cell_type":"markdown","id":"d8a8cb","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nUse the <tt>show()</tt> tool to display the expression \\(x^2+4yz\\) using a Code cell. Remember that\n\\(4yz=4\\times y\\times z\\) requires the <tt>*</tt> operator to perform multiplication.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":47,"type":"cell"}
{"cell_type":"markdown","id":"d9ed13","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>b. </b></div>\n \n <span>\nMath variables may be manipulated just like literal values or values store in CS variables. But since\nthey don't store specific values, these combinations of variables represent an expression.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":46,"type":"cell"}
{"cell_type":"markdown","id":"e39feb","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\n \\[\\begin{align*}x+7\\amp=11\\\\-7\\amp\\phantom{=}-7\\\\x\\amp=4\\\\\\end{align*}\\]\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":72,"type":"cell"}
{"cell_type":"markdown","id":"e67213","input":"","metadata":{"editable":true},"pos":55,"type":"cell"}
{"cell_type":"markdown","id":"e87b7a","input":"","metadata":{"editable":true},"pos":39,"type":"cell"}
{"cell_type":"markdown","id":"ed2aa7","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>c. </b></div>\n \n <span>\nVariables can be overwritten. In a Jupyter notebook, you can go to a previous cell and edit the assignment,\nand you can also create a new Code cell and write the assignment.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":30,"type":"cell"}
{"cell_type":"markdown","id":"f3b88e","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>\n Listing 1.3.3.</b></div>\n <div>Amended variable assignments\n <span><pre>craig_pens = 100\nlaura_pens = 30\nphillip_pens = 18\nsherill_pens = 3\nsteven_pens = 22</pre></span>\n </div>\n \n\n</div>","metadata":{"editable":false},"pos":32,"type":"cell"}
{"cell_type":"markdown","id":"fab8c8","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <h3>\n Activity 1.3.3</h3>\n \n\n</div>","metadata":{"editable":false},"pos":20,"type":"cell"}
{"cell_type":"markdown","id":"fddd0e","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <span>\nUse the <tt>solve()</tt> tool to solve \\(2x+5=x-7\\) automatically.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":77,"type":"cell"}
{"cell_type":"markdown","id":"fe2660","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>d. </b></div>\n \n <span>\nBefore doing anything further, write a sentence about what you notice about the result of your existing code cell\nadding the variables together.\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":34,"type":"cell"}
{"cell_type":"markdown","id":"feac09","input":"","metadata":{"editable":true},"pos":80,"type":"cell"}
{"cell_type":"markdown","id":"ffa5df","input":"<div class=\"not-editable\" style=\" background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px; \">\n\n\n <div><b>a. </b></div>\n \n <span>\nUnlike CS variables, mathematical variables represent an unknown value or arbitrary value, rather than\nstoring a specific piece of data. These variables are often represented by single letters rather than the\nlong semantic names used for CS variables. For example, SageMath always assumes <tt>x</tt> is\na mathematical variable named \\(x\\).\n </span>\n \n\n</div>","metadata":{"editable":false},"pos":42,"type":"cell"}
{"id":0,"time":1592942749281,"type":"user"}
{"last_load":1592942877372,"type":"file"}