<?xml version="1.0" encoding="UTF-8" ?>

<section xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="data-collections" jupyter-kernel="python">
    <title>Collections of Data</title>
    <exploration>
        <task>
            <p>
Use code cells to find the squares of the counting numbers from <m>0</m> to <m>9</m>:
<m>0^2=0</m>, <m>1^2=1</m>, <m>2^2=4</m>, <m>\cdots</m>. (Remember that <c>**</c> is
used in Python to denote an exponent.)
            </p>
        </task>
        <task>
            <p>
The sum of the cubes of <m>0</m> through <m>4</m> may be found by running
<c>0**3+1**3+2**3+3**3+4**3</c>, which turns out to be <m>100</m>.
            </p>
            <p>
Show that the sum of the squares of <m>0</m> through <m>9</m> is equal to <m>285</m>.
            </p>
        </task>
        <task>
            <p>
To avoid a lot of repetition, we may quickly produce the cubes of <m>0</m> through <m>4</m>
as a <term>list</term> by running <c>cubes = [n**3 for n in range(5)]</c>.
Then <c>sum(cubes)</c> also results in <m>100</m>.
            </p>
            <p>
Adapt this technique to show that the sum of the squares of <m>0</m> through <m>99</m>
is equal to <m>328{,}350</m>.
            </p>
        </task>
    </exploration>
    <activity>
        <introduction>
            <p>
An unordered collection of mathematical objects is known as a <term>set</term>.
Sets are written as a pair of curly braces surrounding a description of its members,
such as <m>\{2,8,1,4\}</m>.
            </p>
        </introduction>
        <task>
            <p>
Sets may be declared in Python and SageMath using the syntax <c>{2,8,1,4}</c>.
Use this syntax and the equality operator <c>==</c> to confirm that
<m>\{100,101,100\}</m>, <m>\{101,100\}</m>, and <m>\{100,101\}</m> are all the
same set (since they all contain exactly the same numbers).
            </p>
        </task>
        <task>
            <p>
The <term>union</term> of many sets describes anything that belongs to any of the given
sets. For example, the union of <m>\{1,2,3\}</m> with <m>\{3,4,5\}</m> may be found
using the code <c>{1,2,3} | {3,4,5}</c>, resulting in
<m>\{1,2,3,4,5\}</m>.
            </p>
            <p>
Find the union of the three sets <m>\{1,2,4,7\}</m>, <m>\{2,5,7,9\}</m>, and
<m>\{0,2,3,7\}</m>.
            </p>
        </task>
        <task>
            <p>
The <term>intersection</term> of many sets describes only the things that belong to all of the given
sets. For example, the intersection of <m>\{1,2,3\}</m> with <m>\{3,4,5\}</m> may be found
using the code <c>{1,2,3} &amp; {3,4,5}</c>, resulting in
<m>\{3\}</m>.
            </p>
            <p>
Find the intersection of the three sets <m>\{1,2,4,7\}</m>, <m>\{2,5,7,9\}</m>, and
<m>\{0,2,3,7\}</m>.
            </p>
        </task>
        <task>
            <p>
Sets may contain other kinds of data, such as strings.
            </p>
            <p>
Find the union and intersection of the sets <c>{1,2,3}</c> and
<c>{1,"2","three"}</c>.
            </p>
        </task>
<!--        <task>
            <p>
There are only four sets that only use the numbers <m>0</m> and <m>1</m>:
<m>\{\},\{0\},\{1\},\{0,1\}</m>.
            </p>
            <p>
List all the sets that only use the numbers <m>0</m>, <m>1</m>, and <m>2</m>.
            </p>
        </task>
        <task>
            <p>
Based on these examples, guess how many sets only use the counting
numbers <m>0</m> through <m>7</m>. Explain your reasoning.
            </p>
        </task>-->
<!--        <task>
            <p>
The size of a set is known as its <term>cardinality</term>, which can be
computed by SageMath: <c>{0,1,2}.cardinality()</c>. SageMath is also able
to measure infinite cardinalities: <c>QQ.cardinality()</c> confirms that there
are infinitely-many rational numbers (represented in SageMath by <c>QQ</c>).
            </p>
            <p>
Use SageMath to confirm that <m>\{2,3,5,7,11,13,17,19\}</m> contains 
            </p>
        </task>-->
    </activity>
    <activity>
        <introduction>
            <p>
Sets are useful collections when you only care if a datum belongs to the set
or not. But often you want your data to be ordered, and often you
want to be able count the same datum multiple times in your collection.
This is where <term>lists</term> are useful.
            </p>
        </introduction>
        <task>
            <p>
Lists use hard brackets <c>[2,8,1,4]</c> instead of curly brackets.
Use <c>==</c> to verify that each of the lists <c>[100,101,100]</c>, <c>[101,100]</c>, and
<c>[100,101]</c> are not considered equal to each other, since even though they contain
the same data, it appears in different orders and frequencies.
            </p>
        </task>
        <task>
            <p>
The <term>concatentation</term> of many lists attaches them in order from end-to-end.
For example, the concatenation of <c>[1,2,3]</c> with <c>[3,4,5]</c> may be found
using the code <c>[1,2,3] + [3,4,5]</c>, resulting in
<c>[1,2,3,3,4,5]</c>. (Note that <c>3</c> is repeated since lists allow repeats.)
            </p>
            <p>
Find the concatenation of the three lists <m>[1,2,4,7]</m>, <m>[2,5,7,9]</m>, and
<m>[0,2,3,7]</m>.
            </p>
        </task>
        <task>
            <p>
Like sets, lists may contain data besides raw numbers, such as strings.
            </p>
            <p>
Find the concatenation of the sets <c>[1,2,3]</c> and
<c>[1,"2","three"]</c>.
            </p>
        </task>
        <task>
            <p>
Elements of a list can be changed as shown in <xref ref="data-collections-list-mutable"/>.
            </p>
            <listing xml:id="data-collections-list-mutable">
                <caption>Changing elements of a list.</caption>
                <program language="python">
                    <input><xi:include parse="text" href="../files/data-collections-list-mutable.py" /></input>
                </program>
            </listing>
            <p>
Let <c>favorite_things = ["raindrops", "roses", "whiskers", "kittens"]</c>, and then use the techniques
from <xref ref="data-collections-list-mutable" /> to change
<q>roses</q> and <q>kittens</q> into some of your favorite things (leaving "raindrops" and "whiskers" in place).
            </p>
        </task>
        <task>
            <p>
<term>Tuples</term> are similar to lists in that they store ordered collections of data,
but are used in different contexts. An important difference is that their elements are fixed.
(That is, lists are <term>mutable</term> while tuples are <term>immutable</term>.)
            </p>
            <p>
Copy <xref ref="data-collections-tuple-immutable" /> to a Code cell, and replace the two
indicated comments appropriately.
            </p>
            <listing xml:id="data-collections-tuple-immutable">
                <caption>Trying to alter a tuple.</caption>
                <program language="python">
                    <input><xi:include parse="text" href="../files/data-collections-tuple-immutable.py" /></input>
                </program>
            </listing>
        </task>
    </activity>
    <activity>
        <introduction>
        <p>
            Dictionaries
        </p>
        </introduction>
    </activity>
    <activity>
        <introduction>
        <p>
            Similar things (arrays, iterators...)
            Note how there are less than <m>10^100</m> atoms in the universe but 
        </p>
        </introduction>
    </activity>
</section>

